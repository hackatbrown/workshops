(require '[clojure-getting-started.web :as test]:reload)
(def server (web/-main))
(def server (test/-main))
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(.stop server)
(def server (test/-main))
(.stop server)
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(.stop server)
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(.stop server)
(require '[clojure-getting-started.web :as test]:reload)
(.stop server)
(def server (test/-main))
(.stop server)
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(.stop server)
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(.stop server)
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(.stop server)
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(.stop server)
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(.stop server)
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(.stop server)
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(.stop server)
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(.stop server)
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(.stop server)
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(.stop server)
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(.stop server)
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(.stop server)
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(.stop server)
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(.stop server)
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(.stop server)
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(.stop server)
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(.stop server)
(require '[clojure-getting-started.web :as test]:reload)
(def server (test/-main))
(inc 1)
